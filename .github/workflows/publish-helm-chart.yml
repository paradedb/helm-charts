# workflows/publish-helm-chart.yml
#
# Publish Helm Chart
# Publish Helm Chart to paradedb.github.io via GitHub Pages. This workflow also triggers
# the creation of a GitHub Release and only happens once we trigger a workflow_dispatch
# event, either manually or via creating a release in the `paradedb/paradedb` repository.

name: Publish Helm Chart

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      appVersion:
        description: "The ParadeDB version to publish in the Helm Chart (e.g. 0.1.0)"
        required: true
        default: ""

concurrency:
  group: publish-helm-chart-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Publish ParadeDB Helm Chart to GitHub Pages
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # We have a separate version for our Helm Chart, since it needs to always increment by
      # one for every production release, independently of the ParadeDB version. Any non-patch
      # version increment should be done manually in GitHub Actions Variables.
      - name: Increment Helm Chart Version Number in GitHub Actions Variables
        env:
          GH_TOKEN: ${{ secrets.GHA_CREATE_RELEASE_PAT }}
        run: |
          NEW_CHART_VERSION_PATCH=$(( ${{ vars.CHART_VERSION_PATCH }} + 1 ))
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/paradedb/helm-charts/actions/variables/CHART_VERSION_PATCH \
            -f name="CHART_VERSION_PATCH" \
            -f value="${NEW_CHART_VERSION_PATCH}"

      - name: Set Helm Chart Release Versions
        working-directory: charts/paradedb/
        env:
          GH_TOKEN: ${{ secrets.GHA_CREATE_RELEASE_PAT }}
        run: |
          # If no appVersion is provided, we use the latest ParadeDB version
          if [ -z "${{ github.event.inputs.appVersion }}" ]; then
            LATEST_TAG=$(curl -s https://api.github.com/repos/paradedb/paradedb/tags | jq -r '.[0].name')
            APP_VERSION=${LATEST_TAG#v}
          else
            APP_VERSION=${{ github.event.inputs.appVersion }}
          fi
          # Update appVersion to the GitHub Release version and version to the Helm Chart version
          sed -i "s/^appVersion: .*/appVersion: $APP_VERSION/" Chart.yaml
          sed -i 's/^version: .*/version: ${{ vars.CHART_VERSION_MAJOR }}.${{ vars.CHART_VERSION_MINOR }}.${{ vars.CHART_VERSION_PATCH }}/' Chart.yaml
          cat Chart.yaml

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GHA_CREATE_RELEASE_PAT }}"
