# Default values for search.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# ---------- Retake Search values ----------

search:
  enabled: true
  replicaCount: 1

  image:
    repository: retake/retakesearch
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  configMap:
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  security:
    enabled: true
    apiKey: retake-test-key
    existingSecret: ""

  service:
    type: NodePort
    port: 8000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# ---------- Sync values ----------

sync:
  enabled: true
  name: "sync"
  labels:
    - "sync"
  replicaCount: 1

  image:
    repository: retake/retakesync
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  configMap:
    name: ""

  # Default configmap environment
  elasticsearchScheme: https
  elasticsearch: false
  opensearch: true

  security:
    tls: false

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 7433

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# ---------- OpenSearch values ----------

opensearchCluster:
  enabled: true
  installOperator: true

#  bootstrap:
#    Configure settings for the bootstrap pod
  general:
    httpPort: "9200"
    version: 2.9.0
    serviceName: "core-cluster"
    drainDataNodes: true
    setVMMaxMapCount: true
    additionalConfig:
      plugins.ml_commons.model_access_control_enabled: "true"
#    securityContext:
#       Specify container security context for OpenSearch pods
#    podSecurityContext:
#       Specify pod security context for OpenSearch pods
  dashboards:
    enable: false
    replicas: 1
    version: 2.9.0
#        securityContext:
#           Specify container security context for OSD pods
#        podSecurityContext:
#           Specify pod security context for OSD pods
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "500m"
  nodePools:
    - component: nodes
      diskSize: "30Gi"
      jvm: -Xmx1024M -Xms1024M
      replicas: 3
      roles:
        - "cluster_manager"
        - "data"
      resources:
        requests:
          memory: "2Gi"
          cpu: "500m"
        limits:
          memory: "2Gi"
          cpu: "500m"
    - component: ml-nodes
      diskSize: "30Gi"
      jvm: -Xmx1024M -Xms1024M
      replicas: 1
      roles:
        - "ml"
      resources:
        requests:
          memory: "2Gi"
          cpu: "500m"
        limits:
          memory: "2Gi"
          cpu: "500m"
  security:
    user: admin
    password: admin
    tls:
      enabled: true
      transport:
        generate: true
        perNode: true
      http:
        generate: true
